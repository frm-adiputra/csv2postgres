// Code generated by {{.Generator}} DO NOT EDIT

// +build mage

package main

import (
    "github.com/magefile/mage/mg"
    "{{.ImportPath}}"
)

var {{.PkgVar}}DB {{.PkgVar}}.DBSynchronizer

func init() {
    {{.PkgVar}}DB = {{.PkgVar}}.NewDBSynchronizer()
}

type {{upperCaseFirst .Name}} mg.Namespace

// Drop drops table {{.Name}}
func (t {{upperCaseFirst .Name}}) Drop() error {
    db, err := newDBConn()
    if err != nil {
        return err
    }
    defer db.Close()
    return {{.PkgVar}}DB.Drop(db)
}

// Create creates table {{.Name}}
func (t {{upperCaseFirst .Name}}) Create() error {
    db, err := newDBConn()
    if err != nil {
        return err
    }
    defer db.Close()
    return {{.PkgVar}}DB.Create(db)
}

// Delete deletes rows from table {{.Name}}
func (t {{upperCaseFirst .Name}}) Delete() error {
    db, err := newDBConn()
    if err != nil {
        return err
    }
    defer db.Close()
    return {{.PkgVar}}DB.Delete(db)
}

// Fill fill rows of table {{.Name}}
func (t {{upperCaseFirst .Name}}) Fill() error {
    db, err := newDBConn()
    if err != nil {
        return err
    }
    defer db.Close()
    return {{.PkgVar}}DB.Fill(db)
}

// Up recreates and fill rows of table {{.Name}}
func (t {{upperCaseFirst .Name}}) Up() error {
   mg.SerialDeps(
       {{upperCaseFirst .Name}}.Drop,
       {{upperCaseFirst .Name}}.Create,
       {{upperCaseFirst .Name}}.Fill,
   )
   return nil
}
